{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red127\green0\blue85;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c49804\c0\c33333;}
\paperw11900\paperh16840\margl1440\margr1440\vieww25100\viewh15700\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 Explanation:\
\
1. Class Name :  ExecuteMainBatch\
    Purpose : Main method : Execution Starts from here	\
	Two steps are defined :\
	a. Generate Users and pass for processing.\
	b. Process and Send Notification\
\
\pard\pardeftab720\partightenfactor0
\cf0 2. Class Name :  ItemProcessingImpl extends ItemProcessing\
    Purpose :  process methods implementation \
	 Below methods are introduced :\
	a.  process()	- Returns the mapping of emailID and emailType\
\
3. Class Name :  EmailServiceImpl 
\f1\b \cf2 implements
\f0\b0 \cf0  EmailService\
    Purpose : Implementation of EmailService	\
	 Below methods are introduced :\
		a. sendMail(String, MailType) - sending mail\
		b. displayContent(String, MailType) - email basic content\
\
4. Class Name : ItemReaderImpl 
\f1\b \cf2 implements
\f0\b0 \cf0  ItemReader<List<User>>\
    Purpose : set users and override read()- which return users\
\
5. Class Name :  ItemWriterImpl 
\f1\b \cf2 implements
\f0\b0 \cf0  ItemWriter\
    Purpose : Implementation of ItemWriter	\
\
\
6. Interface and Class Name : \
	(1)UserEmailMappingImpl 
\f1\b \cf2 implements
\f0\b0 \cf0  IUserEmailMapping\
	(2) IUserEmailMapping\
	\
	Purpose : Interface and its implementation - to fo the mapping logic , so as to set the 	\'93email Address and email Type\'94\
\
\
\
\
6. Interface and Class Name : \
	(1)	UserGenerationImpl 
\f1\b \cf3 implements
\f0\b0 \cf0  IUserGeneration\
	(2) 	IUserGeneration\
	\
	Purpose : Interface and its implementation - to generate random users\
\pard\pardeftab720\partightenfactor0
\cf0 	
\f1\b \ul Note -
\f0\b0 \ulnone  IntStream.range(1,10) - has been used to setup users , we can provide other implementations as well \
\
\
=============== Test Results  - Starts======\{ Results are correct\}====\
\
\pard\pardeftab720\partightenfactor0
\cf0 For email : email_2@supermail.com Email Template choosen is :MAIL_TYPE_1\
Mail Sent Finally!!!!!\
\
\
For email : email_9@supermail.com Email Template choosen is :MAIL_TYPE_1\
Mail Sent Finally!!!!!\
\
\
For email : email_8@supermail.com Email Template choosen is :MAIL_TYPE_5\
Mail Sent Finally!!!!!\
\
\
For email : email_3@supermail.com Email Template choosen is :MAIL_TYPE_1\
Mail Sent Finally!!!!!\
\
\
For email : email_6@supermail.com Email Template choosen is :MAIL_TYPE_1\
Mail Sent Finally!!!!!\
\
\
For email : email_1@supermail.com Email Template choosen is :MAIL_TYPE_2\
Mail Sent Finally!!!!!\
\
\
For email : email_5@supermail.com Email Template choosen is :MAIL_TYPE_1\
Mail Sent Finally!!!!!\
\
\
For email : email_7@supermail.com Email Template choosen is :MAIL_TYPE_2\
Mail Sent Finally!!!!!\
\
\
For email : email_4@supermail.com Email Template choosen is :MAIL_TYPE_3\
Mail Sent Finally!!!!!\
\
\pard\pardeftab720\partightenfactor0
\cf0 =============== Test Results  - Ends==========\
\pard\pardeftab720\partightenfactor0
\cf0 \
}